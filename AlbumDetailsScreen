import UIKit
import Combine

class AlbumDetailsViewController: UIViewController {
    private let viewModel: AlbumDetailsViewModel
    private var cancellables = Set<AnyCancellable>()

    private let collectionView: UICollectionView = {
        let layout = UICollectionViewFlowLayout()
        layout.itemSize = CGSize(width: 100, height: 100)
        return UICollectionView(frame: .zero, collectionViewLayout: layout)
    }()

    private let searchBar = UISearchBar()

    init(albumId: Int) {
        self.viewModel = AlbumDetailsViewModel()
        super.init(nibName: nil, bundle: nil)
        viewModel.fetchImages(for: albumId)
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupBindings()
    }

    private func setupUI() {
        view.addSubview(searchBar)
        view.addSubview(collectionView)
        // Layout omitted for brevity
        collectionView.register(UICollectionViewCell.self, forCellWithReuseIdentifier: "cell")
    }

    private func setupBindings() {
        searchBar.textPublisher
            .assign(to: \.searchQuery, on: viewModel)
            .store(in: &cancellables)

        viewModel.$filteredImages
            .sink { [weak self] _ in
                self?.collectionView.reloadData()
            }
            .store(in: &cancellables)
    }
}
